events {
    worker_connections 1024;
}

http {
    # Map para WebSocket connections
    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }

    # Map para detectar requests lentos (>1 segundo)
    map $request_time $slow_request {
        ~^[0-9]$ 0;
        ~^0\.[0-9]$ 0;
        default 1;
    }

    log_format detailed '$remote_addr - $remote_user [$time_local] '
                       '"$request" $status $body_bytes_sent '
                       '"$http_referer" "$http_user_agent" '
                       'rt=$request_time uct="$upstream_connect_time" '
                       'uht="$upstream_header_time" urt="$upstream_response_time" '
                       'country="$http_cf_ipcountry" city="$http_cf_ipcity" '
                       'timezone="$http_cf_timezone" '
                       'cache="$upstream_cache_status" '
                       'bytes_sent=$bytes_sent '
                       'request_length=$request_length';

    # Log apenas requests que demoram mais que 1 segundo
    log_format slow_requests '$remote_addr - [$time_local] '
                            '"$request" $status '
                            'rt=$request_time urt="$upstream_response_time" '
                            'SLOW_REQUEST';

    # Configuração de cache agressiva
    proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=streamlit_cache:10m max_size=100m inactive=60m;

    access_log /var/log/nginx/access.log detailed;
    access_log /var/log/nginx/slow.log slow_requests if=$slow_request;
    error_log /var/log/nginx/error.log;

    # Performance optimizations
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    keepalive_requests 1000;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/json
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    server {
        listen 80;
        server_name localhost;

        # Cache para arquivos estáticos
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            proxy_pass http://web:8501;
            proxy_cache streamlit_cache;
            proxy_cache_valid 200 1h;
            proxy_cache_valid 404 1m;
            add_header X-Cache-Status $upstream_cache_status;
            expires 1h;
            add_header Cache-Control "public, immutable";
        }

        # Proxy otimizado para o Streamlit
        location / {
            proxy_pass http://web:8501;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Headers para capturar informações de localização
            proxy_set_header CF-IPCountry $http_cf_ipcountry;
            proxy_set_header CF-IPCity $http_cf_ipcity;
            proxy_set_header CF-Timezone $http_cf_timezone;
            
            # WebSocket support para Streamlit - configuração otimizada
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            
            # Timeout configs otimizados - mais agressivos
            proxy_connect_timeout 10s;
            proxy_send_timeout 30s;
            proxy_read_timeout 60s;
            
            # Buffer settings otimizados para performance máxima
            proxy_buffering off;
            proxy_request_buffering off;
            
            # Keep-alive para upstream
            proxy_socket_keepalive on;
        }

        # Endpoint para health check
        location /health {
            access_log off;
            return 200 "OK\n";
            add_header Content-Type text/plain;
        }

        # Endpoint para métricas
        location /metrics {
            access_log off;
            return 200 "nginx_up 1\n";
            add_header Content-Type text/plain;
        }
    }
} 